// <auto-generated />
using System;
using ISZRS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ISZRS.Data.Migrations
{
    [DbContext(typeof(MojContext))]
    [Migration("20190407123154_updatebuild")]
    partial class updatebuild
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ISZR.Web.Models.Dodaci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Cijena");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<bool>("JeUkljucen");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<byte[]>("Slika")
                        .IsRequired();

                    b.Property<int>("UslugeID");

                    b.HasKey("Id");

                    b.HasIndex("UslugeID");

                    b.ToTable("Dodaci");
                });

            modelBuilder.Entity("ISZR.Web.Models.Drzave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Drzave");
                });

            modelBuilder.Entity("ISZR.Web.Models.GostaSoba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GostiID");

                    b.Property<int>("ZaduzenaSobaID");

                    b.HasKey("Id");

                    b.HasIndex("GostiID");

                    b.HasIndex("ZaduzenaSobaID");

                    b.ToTable("GostaSoba");
                });

            modelBuilder.Entity("ISZR.Web.Models.Gradovi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaId");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Regija")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Gradovi");
                });

            modelBuilder.Entity("ISZR.Web.Models.Hrana", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Cijena");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<byte[]>("Slika")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Hrana");
                });

            modelBuilder.Entity("ISZR.Web.Models.KreditneKartice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojKartice")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("TipKarticeID");

                    b.Property<string>("VaziDo")
                        .IsRequired();

                    b.Property<DateTime>("VaziDoDatum");

                    b.HasKey("Id");

                    b.HasIndex("TipKarticeID");

                    b.ToTable("KreditneKartice");
                });

            modelBuilder.Entity("ISZR.Web.Models.Namjestaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Cijena");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<bool>("JeOsnovniNamjestaj");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<byte[]>("Slika")
                        .IsRequired();

                    b.Property<int>("tipNamjestaja");

                    b.HasKey("Id");

                    b.ToTable("Namjestaj");
                });

            modelBuilder.Entity("ISZR.Web.Models.NamjestajSoba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Kolicina");

                    b.Property<int>("NamjestajID");

                    b.Property<int>("SobeID");

                    b.Property<int?>("ZaduzenaSobaID");

                    b.HasKey("Id");

                    b.HasIndex("NamjestajID");

                    b.HasIndex("SobeID");

                    b.HasIndex("ZaduzenaSobaID");

                    b.ToTable("NamjestajSoba");
                });

            modelBuilder.Entity("ISZR.Web.Models.NarudzbaHrana", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HranaID");

                    b.Property<int>("Kolicina");

                    b.Property<int>("NarudzbeID");

                    b.HasKey("Id");

                    b.HasIndex("HranaID");

                    b.HasIndex("NarudzbeID");

                    b.ToTable("NarudzbaHrana");
                });

            modelBuilder.Entity("ISZR.Web.Models.Narudzbe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumDostave");

                    b.Property<DateTime>("DatumNarudzbe");

                    b.Property<float>("UkupnaCijena");

                    b.Property<int>("ZaduzenaSobaId");

                    b.HasKey("Id");

                    b.HasIndex("ZaduzenaSobaId");

                    b.ToTable("Narudzbe");
                });

            modelBuilder.Entity("ISZR.Web.Models.Sobe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrojSobe")
                        .IsRequired();

                    b.Property<int?>("BrojSprata")
                        .IsRequired();

                    b.Property<float>("Cijena");

                    b.Property<int>("TipSobeID");

                    b.HasKey("Id");

                    b.HasIndex("TipSobeID");

                    b.ToTable("Sobe");
                });

            modelBuilder.Entity("ISZR.Web.Models.TipKartice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TipKartice");
                });

            modelBuilder.Entity("ISZR.Web.Models.TipSobe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Kapacitet");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("TipSobe");
                });

            modelBuilder.Entity("ISZR.Web.Models.UslugaDodaciZaduzenje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DodaciID");

                    b.Property<int>("Kolicina");

                    b.Property<int?>("UslugaID");

                    b.Property<int>("ZaduzivanjaID");

                    b.HasKey("Id");

                    b.HasIndex("DodaciID");

                    b.HasIndex("UslugaID");

                    b.HasIndex("ZaduzivanjaID");

                    b.ToTable("UslugaDodaciZaduzenje");
                });

            modelBuilder.Entity("ISZR.Web.Models.Usluge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Cijena");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<byte[]>("Slika");

                    b.Property<int>("TipCijene");

                    b.Property<int>("TipUsluge");

                    b.HasKey("Id");

                    b.ToTable("Usluge");
                });

            modelBuilder.Entity("ISZR.Web.Models.ZaduzeneSobe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RezervacijaId");

                    b.Property<int>("SobaID");

                    b.HasKey("Id");

                    b.HasIndex("RezervacijaId");

                    b.HasIndex("SobaID");

                    b.ToTable("ZaduzeneSobe");
                });

            modelBuilder.Entity("ISZR.Web.Models.Zaduzivanja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("JeZavršeno");

                    b.Property<DateTime>("KrajZaduzivanja");

                    b.Property<DateTime>("PocetakZaduzivanja");

                    b.Property<int>("RezervacijaId");

                    b.Property<float>("UkupnaCijena");

                    b.Property<int>("UslugaID");

                    b.Property<int?>("ZaposleniciId");

                    b.HasKey("Id");

                    b.HasIndex("RezervacijaId");

                    b.HasIndex("UslugaID");

                    b.HasIndex("ZaposleniciId");

                    b.ToTable("Zaduzivanja");
                });

            modelBuilder.Entity("ISZRS.Data.Models.GostiUsluga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GostiID");

                    b.Property<int>("ZaduzivanjaID");

                    b.HasKey("Id");

                    b.HasIndex("GostiID");

                    b.HasIndex("ZaduzivanjaID");

                    b.ToTable("GostiUsluga");
                });

            modelBuilder.Entity("ISZRS.Data.Models.Osobe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Osobe");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Osobe");
                });

            modelBuilder.Entity("ISZRS.Data.Models.Racun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PdfDoc");

                    b.Property<int?>("RezervacijaId");

                    b.Property<DateTime>("datumKreacije");

                    b.HasKey("Id");

                    b.HasIndex("RezervacijaId");

                    b.ToTable("Racun");
                });

            modelBuilder.Entity("ISZRS.Data.Models.Rezervacije", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumEvidentiranjaRezerviranja");

                    b.Property<DateTime>("DatumPocetkaRezerviranja");

                    b.Property<DateTime>("DatumZavrsetkaRezerviranja");

                    b.Property<int?>("GlavniGostId");

                    b.Property<bool>("RezervacijaAktivna");

                    b.Property<bool>("RezervacijaZavrsena");

                    b.Property<string>("Zaposlenik");

                    b.HasKey("RezervacijaId");

                    b.HasIndex("GlavniGostId");

                    b.ToTable("Rezervacije");
                });

            modelBuilder.Entity("ISZRS.Data.Models.TipSobeMoguciNamjestaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NamjestajID");

                    b.Property<int>("TipSobeID");

                    b.HasKey("Id");

                    b.HasIndex("NamjestajID");

                    b.HasIndex("TipSobeID");

                    b.ToTable("TipSobeMoguciNamjestaj");
                });

            modelBuilder.Entity("ISZRS.Data.Models.TipSobeNamjestaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Kolicina");

                    b.Property<int>("TipNamjestaja");

                    b.Property<int>("TipSobeID");

                    b.HasKey("Id");

                    b.HasIndex("TipSobeID");

                    b.ToTable("TipSobeNamjestaj");
                });

            modelBuilder.Entity("ISZR.Web.Models.Gosti", b =>
                {
                    b.HasBaseType("ISZRS.Data.Models.Osobe");

                    b.Property<int?>("GradId");

                    b.Property<int?>("KreditneKarticaId");

                    b.HasIndex("GradId");

                    b.HasIndex("KreditneKarticaId");

                    b.ToTable("Gosti");

                    b.HasDiscriminator().HasValue("Gosti");
                });

            modelBuilder.Entity("ISZR.Web.Models.Zaposlenici", b =>
                {
                    b.HasBaseType("ISZRS.Data.Models.Osobe");

                    b.Property<string>("BrojTelefona")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("DatumRođenja");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasMaxLength(13);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("MjestoBoravka")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.ToTable("Zaposlenici");

                    b.HasDiscriminator().HasValue("Zaposlenici");
                });

            modelBuilder.Entity("ISZR.Web.Models.Dodaci", b =>
                {
                    b.HasOne("ISZR.Web.Models.Usluge", "Usluga")
                        .WithMany()
                        .HasForeignKey("UslugeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ISZR.Web.Models.GostaSoba", b =>
                {
                    b.HasOne("ISZR.Web.Models.Gosti", "Gosti")
                        .WithMany()
                        .HasForeignKey("GostiID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ISZR.Web.Models.ZaduzeneSobe", "ZaduzeneSobe")
                        .WithMany("GostaSoba")
                        .HasForeignKey("ZaduzenaSobaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ISZR.Web.Models.Gradovi", b =>
                {
                    b.HasOne("ISZR.Web.Models.Drzave", "Drzave")
                        .WithMany()
                        .HasForeignKey("DrzavaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ISZR.Web.Models.KreditneKartice", b =>
                {
                    b.HasOne("ISZR.Web.Models.TipKartice", "TipKartice")
                        .WithMany()
                        .HasForeignKey("TipKarticeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ISZR.Web.Models.NamjestajSoba", b =>
                {
                    b.HasOne("ISZR.Web.Models.Namjestaj", "Namjestaj")
                        .WithMany()
                        .HasForeignKey("NamjestajID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ISZR.Web.Models.Sobe", "Sobe")
                        .WithMany()
                        .HasForeignKey("SobeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ISZR.Web.Models.ZaduzeneSobe", "ZaduzeneSobe")
                        .WithMany()
                        .HasForeignKey("ZaduzenaSobaID");
                });

            modelBuilder.Entity("ISZR.Web.Models.NarudzbaHrana", b =>
                {
                    b.HasOne("ISZR.Web.Models.Hrana", "Hrana")
                        .WithMany()
                        .HasForeignKey("HranaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ISZR.Web.Models.Narudzbe", "Narudzbe")
                        .WithMany()
                        .HasForeignKey("NarudzbeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ISZR.Web.Models.Narudzbe", b =>
                {
                    b.HasOne("ISZR.Web.Models.ZaduzeneSobe", "ZaduzenaSoba")
                        .WithMany()
                        .HasForeignKey("ZaduzenaSobaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ISZR.Web.Models.Sobe", b =>
                {
                    b.HasOne("ISZR.Web.Models.TipSobe", "TipSobe")
                        .WithMany()
                        .HasForeignKey("TipSobeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ISZR.Web.Models.UslugaDodaciZaduzenje", b =>
                {
                    b.HasOne("ISZR.Web.Models.Dodaci", "Dodaci")
                        .WithMany()
                        .HasForeignKey("DodaciID");

                    b.HasOne("ISZR.Web.Models.Usluge", "Usluge")
                        .WithMany()
                        .HasForeignKey("UslugaID");

                    b.HasOne("ISZR.Web.Models.Zaduzivanja", "Zaduzivanja")
                        .WithMany()
                        .HasForeignKey("ZaduzivanjaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ISZR.Web.Models.ZaduzeneSobe", b =>
                {
                    b.HasOne("ISZRS.Data.Models.Rezervacije", "Rezervacija")
                        .WithMany("ZaduzeneSobe")
                        .HasForeignKey("RezervacijaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ISZR.Web.Models.Sobe", "Sobe")
                        .WithMany("ZaduzeneSobe")
                        .HasForeignKey("SobaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ISZR.Web.Models.Zaduzivanja", b =>
                {
                    b.HasOne("ISZRS.Data.Models.Rezervacije", "Rezervacije")
                        .WithMany("Zaduzivanja")
                        .HasForeignKey("RezervacijaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ISZR.Web.Models.Usluge", "Usluga")
                        .WithMany()
                        .HasForeignKey("UslugaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ISZR.Web.Models.Zaposlenici")
                        .WithMany("Zaduzivanjas")
                        .HasForeignKey("ZaposleniciId");
                });

            modelBuilder.Entity("ISZRS.Data.Models.GostiUsluga", b =>
                {
                    b.HasOne("ISZR.Web.Models.Gosti", "Gosti")
                        .WithMany()
                        .HasForeignKey("GostiID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ISZR.Web.Models.Zaduzivanja", "Zaduzivanja")
                        .WithMany("GostiUsluge")
                        .HasForeignKey("ZaduzivanjaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ISZRS.Data.Models.Racun", b =>
                {
                    b.HasOne("ISZRS.Data.Models.Rezervacije", "Rezervacija")
                        .WithMany()
                        .HasForeignKey("RezervacijaId");
                });

            modelBuilder.Entity("ISZRS.Data.Models.Rezervacije", b =>
                {
                    b.HasOne("ISZR.Web.Models.Gosti", "GlavniGost")
                        .WithMany()
                        .HasForeignKey("GlavniGostId");
                });

            modelBuilder.Entity("ISZRS.Data.Models.TipSobeMoguciNamjestaj", b =>
                {
                    b.HasOne("ISZR.Web.Models.Namjestaj", "Namjestaj")
                        .WithMany()
                        .HasForeignKey("NamjestajID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ISZR.Web.Models.TipSobe", "TipSobe")
                        .WithMany()
                        .HasForeignKey("TipSobeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ISZRS.Data.Models.TipSobeNamjestaj", b =>
                {
                    b.HasOne("ISZR.Web.Models.TipSobe", "TipSobe")
                        .WithMany("MoguciNamjestaj")
                        .HasForeignKey("TipSobeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ISZR.Web.Models.Gosti", b =>
                {
                    b.HasOne("ISZR.Web.Models.Gradovi", "Gradovi")
                        .WithMany()
                        .HasForeignKey("GradId");

                    b.HasOne("ISZR.Web.Models.KreditneKartice", "KreditneKartica")
                        .WithMany()
                        .HasForeignKey("KreditneKarticaId");
                });
#pragma warning restore 612, 618
        }
    }
}
